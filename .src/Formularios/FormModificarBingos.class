' Gambas class file

Public bingoEditor As Bingo ''estoy editando un bingo existente

Private bingotmp As Bingo '' bingo temporal, el cual es el que trabajo en este formulario

Public Sub ButtonPropiedadesCartones_Click()
  
  FormModificarCartones.BingoTemporalDatos = bingotmp
  
  FormModificarCartones.ShowModal()
  
End

Public Sub ButtonAgregarElemento_Click()
  
  FormModificarElementos.BingoTemporalDatos = bingotmp ''le informo con que bingo tiene que trabajar.
  
  FormModificarElementos.ShowModal()
  'debemos actualizar los datos del gridbingo
  
  'Hago la llamada desde el formulario FormModificarElementos al  ButtonRefrescar_Click()
  
End

Private Sub actualizarDatosGridview()
  
  'cargar datos en el gridview
  bingotmp.CargarDatosBingoCartonesGridview(GridViewDatosBingo)
  
End

Public Sub ButtonSalir_Click()
  
  bingotmp.guardarBingo(True)
  FormFicherosBingos.ButtonRefrescarGridview_click()
  Me.close()
  
End

Public Sub Form_Open()
  
  definirGridViewDatosBingo()
  ' If IsNull(bingoEditor) Then
  '   'estamos creando un bingo vacio
  '   '' Comprobar que el impo
  '   TextBoxFicheroBingo.text = InputBox(("Nombre:"), ("Nuevo Bingo"), ("NuevoBingo") & Format$(Now, "yyyy_mm_dd"))
  '   If TextBoxFicheroBingo.text = "" Then
  '     'se ha cancelado la creacion del bincoedicion del nombre
  '     Me.Close()
  '     Return
  '   Endif
  '   bingotmp = New Bingo
  '   bingotmp.NombreFichero = TextBoxFicheroBingo.text
  ' Else
  'estamos en modo edición de un bingo existente.
  bingotmp = bingoEditor
  TextBoxFicheroBingo.text = bingotmp.NombreFichero
  
  '   Endif
  
  'cargar los datos del bingo
  TextBoxTituloBingo.Text = bingotmp.titulo
  TextAreaDescripcion.Text = bingotmp.descripcion
  ComboBoxCategoria.Text = bingotmp.tipo
  
  'cargar datos en el gridview
  actualizarDatosGridview()
  
  'guardo datos...
  ButtonGuadarModificaciones_Click()
  
  Me.Center()
  
End

'Definir.................
'GridViewDatosBingo

Public Sub definirGridViewDatosBingo()
  
  With GridViewDatosBingo
    .header = 3
    .rows.count = 0
    .columns.count = 4
    .Columns[0].title = ("Tipo")
    .Columns[1].title = ("Dato en pantalla")
    .Columns[2].title = ("Tipo")
    .Columns[3].title = ("Dato en el cartón")
    
    .Columns[0].width = 65
    .Columns[1].width = 250
    .Columns[2].width = 65
    .Columns[3].width = 250
    .font.name = "Times"
    .font.size = 12
    .Mode = Select.single
    .ShowCursor = True
    
  End With
  
End

Public Sub GridViewDatosBingo_DblClick()
  
  'EDITAR REGISTRO SELECCIONADO
  '
  FormModificarElementos.BingoTemporalDatos = bingotmp
  'decirle que elemento estoy editando del bingo/carton...
  
  'Print GridViewDatosBingo.Row <-edito los elementos de la linea seleccionada.
  
  FormModificarElementos.ElementoBingoEditado = GridViewDatosBingo.tag[GridViewDatosBingo.Row] ''Le paso el elemento del bingo que quiero editar
  FormModificarElementos.ShowModal()
  
  'como bingo se ha pasado por referencias, las modificaciones se deben de realizar en el FormModificarElementos
  '
  
End

Public Sub ButtonRefrescar_Click()
  
  definirGridViewDatosBingo()
  
  actualizarDatosGridview()
  
End

Public Sub ButtonGuadarModificaciones_Click()
  
  If bingotmp.NombreFichero = TextBoxFicheroBingo.text Then
    'no hacer nada, permacene con el mismo nombre..
  Else
    '' comprobar si se ha cambiado el nombre del fichero, si es asi
    ''hay que crear nuevo directorio, guardar los datos en él y borrar el directorio antiguo.
    
  Endif
  bingotmp.titulo = TextBoxTituloBingo.Text
  bingotmp.descripcion = TextAreaDescripcion.Text
  bingotmp.tipo = ComboBoxCategoria.Text
  
  bingotmp.guardarBingo(True)
  'Message.Info(("¡¡datos guardados!!")) 
  
End

Public Sub TextBoxFicheroBingo_LostFocus()
  
End

Public Sub ButtonMultipleElementosTexto_Click()
  
  FormMultipleElementosDeTexto.bingotmp = bingotmp 'le paso el bingo para que lo modifique si es necesario...
  FormMultipleElementosDeTexto.ShowModal()
  ButtonRefrescar_Click()
  
End

Public Sub ButtonGenerarCartones_Click()
  
  Dim cuenta As Integer
  Dim res As Integer
  
  Dim textoMensaje As String
  
  Dim mensaje1 As String = ("No se pueden generar los cartones...\ndemasiados elementos repetidos, cuadros blancos o negros para este tipo de cartón")
  '**************************************************************************************************************************************  
  'comprobacion tonta... el numero de elementos repetidos+numero de cuadros negros y blancos debe de ser inferior al tipo de carton...
  '**************************************************************************************************************************************
  
  cuenta = bingotmp.ArrayElementosRepetidos.count + bingotmp.cuadrosBlancos + bingotmp.cuadrosNegros
  
  Select Case bingotmp.tamanoCuadricula
    Case "4x3"
      If cuenta >= 12 Then 
        Message.Info(mensaje1)
        Return
      Endif
    Case "5x4"
      If cuenta >= 20 Then 
        Message.Info(mensaje1)
        Return
      Endif
    Case "5x5"
      If cuenta >= 25 Then 
        Message.Info(mensaje1)
        Return
      Endif
      
  End Select
  
  res = Message.Question(("Al generar nuevos cartones se borrarán los anteriores, ¿quiere continuar?"), ("Sí, continúa"), ("No, cancelar"))
  
  If res <> 1 Then Return 'no, ha cancelado el usuario
  
  'guardo los cambios actuales del bingo...antes de crear los cartones.
  ButtonGuadarModificaciones_Click()
  
  'activo "vigilante" para que muestre el proceso de creación de cartones
  FormAvanceCreacionCartones.bingoActual = bingotmp
  
  If bingotmp.generarCartones() = False Then 
    textoMensaje = ("Problemas al crear los cartones, causas:") 
    textoMensaje &= "\n" & ("     Hay pocos elementos") 
    textoMensaje &= "\n" & ("     Hay muchos cartones para crear") 
    textoMensaje &= "\n" & ("no es posible crear el número de cartones solicitado")
    Message.Error(textoMensaje)
    Application.busy = 0
  Else
    ButtonGuadarModificaciones_Click() '' este es para guardar los cartones realizados...
    Application.busy = 0
    ButtonVerCartones_Click()
    
    'Message.Info(("Cartones Generados !!!"))
    
  Endif
  
  'Proceso de generar cartones
  'Consultar el numero de cartones a generar
  'repetir proceso 
  'crea carton
  'compara con los que hay, si es dintinto lo añade
  'repite tantas veces como cartones haya que crear
  ' como medida de seguridad, si el numero de repeticiones es excesivo... se informa de que o son pocos elementos, o muchos cartones
  
End

Public Sub ButtonVerCartones_Click()
  
  'ver cartones...
  FormVerCartones.bingotmp = bingotmp
  FormVerCartones.Show()
  
End

Public Sub ButtonBorrarElemento_Click()
  
  'Borrado de elemento bingo-carton
  Dim ele As Elemento
  Dim resp As Integer
  
  If -1 = GridViewDatosBingo.Row Then 
    Message.Info(("No hay elemento seleccionado"))
    Return
  Endif
  
  ele = GridViewDatosBingo.tag[GridViewDatosBingo.Row] ''Le paso el elemento del bingo que quiero editar
  
  resp = Message.Question(("El borrado de elementos puede provocar problemas en los cartones que lo usen\n" & "¿Desea borrarlo?"), ("Sí"), ("No, cancelar"))
  
  If resp = 2 Then Return
  
  bingotmp.borrarElementoBingo(ele.id)
  bingotmp.borrarElementoCarton(ele.enlace)
  ButtonRefrescar_Click()
  Message.Info(("El elemento ha sido borrado."))
  
End

Public Sub ButtonImprimir_Click()
  
  ModuleVarios.imprimir(bingotmp)
  
End

Public Sub ButtonMultipleElementosImagenSonido_Click()
  
  FormMultipleImagenesSonidos.btmp = bingotmp
  FormMultipleImagenesSonidos.Show()
  
End

Public Sub ButtonListadoBingo_Click()
  
  Dim c As New CreandoInformeBingo
  
  c.imprimirBingo(bingotmp)
  
End

Public Sub GridViewDatosBingo_MouseDown()
  
  Dim res As Integer
  
  If Mouse.Right = True Then 
    res = Message.Question(("Desea imprimir el listado de elementos?"), ("Si, imprime"), ("No"))
    If res = 1 Then 
      
      ButtonListadoBingo_Click()
      Stop Event  
    Endif
    
  Endif
  
End
